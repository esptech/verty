package com.espalier.vertx;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import io.vertx.core.AbstractVerticle;
import io.vertx.core.Future;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.jdbc.JDBCClient;
import io.vertx.ext.sql.SQLConnection;
import io.vertx.ext.sql.SQLOptions;

@Component
public class DatabaseVerticle extends AbstractVerticle {

    @Value("${spring.datasource.url}")
    private String datasource;

    @Value("${spring.datasource.username}")
    private String username;

    @Value("${spring.datasource.password}")
    private String password;

    private JDBCClient jdbc;

    @Override
    public void start(Future<Void> fut) throws Exception {
        jdbc = JDBCClient.createShared(vertx, new JsonObject()
                .put("url", datasource)
                .put("driver_class", "oracle.jdbc.OracleDriver")
                .put("start_pool_size", 5)
                .put("min_pool_size", 1)
                .put("max_pool_size", 10)
                .put("user", username)
                .put("password", password));

        jdbc.getConnection( asyncResult -> {
            if (asyncResult.succeeded()){
                System.out.println("Success");
            } else if (asyncResult.failed()){
                System.out.println("Failed");
            }
        } );
    }

    private Future<SQLConnection> connect() {
        Future<SQLConnection> future = Future.future();
        jdbc.getConnection(ar -> future.handle(ar.map(c -> c.setOptions(new SQLOptions().setAutoGeneratedKeys(true)))));
        return future;
    }
}
