<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:tns="http://twint.ch/services/base/types/v1"
        targetNamespace="http://twint.ch/services/base/types/v1"
        elementFormDefault="qualified"
        version="1.0">

    <xs:simpleType name="UuidType">
        <xs:annotation>
            <xs:documentation>
                Base type: restriction of xs:string Pattern: [A-Fa-f0-9]{32}|(\{|\()?[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}(\}|\))? This type is used by other XML schema attributes or elements that will
                hold a universal unique identifier (UUID), commonly known as either a globally unique identifier (GUID) or UUID. The regular expression defined limits the contents of an attribute to either a
                single 32-digit hexadecimal string or a 32-digit hex string patterned as [8]-[4]-[4]-[4]-[12] digits.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[A-Fa-f0-9]{32}|(\{|\()?[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}(\}|\))?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MerchantIdType">
        <xs:annotation>
            <xs:documentation>
                Base type: restriction of xs:string Pattern: [0-9A-Za-z]{1,15} holds a reference to a merchant as defined by acquirer.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9A-Za-z]{1,15}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MemberIdType">
        <xs:annotation>
            <xs:documentation>
                A MemberId is an internal identifier used by the Financial Processor to identify a Member of the Scheme
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{6}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ClearingPeriodType">
        <xs:annotation>
            <xs:documentation>
                Base type: restriction of xs:string Pattern: [0-9]{12} defining a clearing period as YYYYMMDDSSSS; year, month, day, sequence number.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]{12}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TransactionTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="POS-SERVICED"/>
            <xs:enumeration value="POS-UNATTENDED"/>
            <xs:enumeration value="A-POS"/>
            <xs:enumeration value="E-POS"/>
            <xs:enumeration value="M-POS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="DataUriScheme">
        <xs:restriction base="xs:string">
            <xs:pattern value="data:.*,[a-zA-Z0-9+/]+={0,2}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Token3Type">
        <xs:restriction base="xs:token">
            <xs:maxLength value="3"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Token50Type">
        <xs:restriction base="xs:token">
            <xs:maxLength value="50"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Token100Type">
        <xs:restriction base="xs:token">
            <xs:maxLength value="100"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Token250Type">
        <xs:restriction base="xs:token">
            <xs:maxLength value="250"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Token3000Type">
        <xs:restriction base="xs:token">
            <xs:maxLength value="3000"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="NumericTokenType">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="1000"></xs:minInclusive>
            <xs:maxInclusive value="99999"></xs:maxInclusive>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="PositiveDecimal">
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0"></xs:minInclusive>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="OperationResultType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="ERROR"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="CurrencyAmountType">
        <xs:sequence>
            <xs:element name="Amount" type="tns:PositiveDecimal"/>
            <xs:element name="Currency" type="tns:Token3Type"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MerchantInformationBaseType">
        <xs:annotation>
            <xs:documentation>
                Basic identification of a Merchant. MAY contain a ExternalTerminalId, if the Merchant wants to provide it.
                In the cases the ExternalTerminalId is given it is used, otherwise the request is regarded as belonging to all
                Terminals of the Merchant.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element name="MerchantUuid" type="tns:UuidType"/>
                <xs:element name="MerchantAliasId" type="tns:Token50Type"/>
            </xs:choice>
            <xs:element name="TerminalExternalId" type="tns:Token50Type" minOccurs="0"/>
            <xs:element name="ServiceAgentUuid" type="tns:UuidType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MerchantInformationType">
        <xs:annotation>
            <xs:documentation>
                Restriction of the Base Merchant Information.
                In contrary to that it MUST contain a ExternalTerminalId. Used as the default type for operations
                within the *-POS Cases, where the Actions are performed by specific Terminal
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element name="MerchantUuid" type="tns:UuidType"/>
                <xs:element name="MerchantAliasId" type="tns:Token50Type"/>
            </xs:choice>
            <xs:element name="AcquirerMerchantId" type="tns:MerchantIdType" minOccurs="0"/>
            <xs:element name="TerminalExternalId" type="tns:Token50Type"/>
            <xs:element name="ServiceAgentUuid" type="tns:UuidType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="MerchantTransactionReferenceType">
        <xs:annotation>
            <xs:documentation>
                Reference number by which the merchant might want to identify
                this voucher in his own applications.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:maxLength value="50"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="CheckSystemStatusRequestType">
        <xs:annotation>
            <xs:documentation>
                A common Request Element used in all TWINT Interfaces to allow clients to check for the availability
                of a specific Service. The Call to the Operation using this type is guaranteed to have no side effects
                other than to return basic information on the Service Status.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="RequestTime" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CheckSystemStatusResponseType">
        <xs:annotation>
            <xs:documentation>
                A common Response Element used in all TWINT Interfaces to allow clients to check for the availability
                of a specific Service. The Response is currently based on the OperationResultType and thus doesn't carry
                additional information other than coarse-grained status yet.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Status" type="tns:OperationResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="TWINTTokenType">
        <xs:sequence>
            <xs:element name="DisplayToken" type="xs:string"/>
            <xs:element name="APIToken" type="xs:string"/>
            <xs:element name="QRCodeImage" type="tns:DataUriScheme"/>
        </xs:sequence>
    </xs:complexType>


</xs:schema>

